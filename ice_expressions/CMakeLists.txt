cmake_minimum_required(VERSION 2.8.3 )
project(ice_expressions)
            
## Use c++ 11x std 
set(CMAKE_CXX_FLAGS "-std=c++11 ${CMAKE_CXX_FLAGS}")

## Enable exception handling for segfaults
set(CMAKE_CXX_FLAGS "-rdynamic -g -fnon-call-exceptions -ggdb ${CMAKE_CXX_FLAGS}")

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS 
  roscpp 
  autodiff 
  alica_engine 
)

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
  INCLUDE_DIRS autogenerated/include
  LIBRARIES ttb_expressions
  CATKIN_DEPENDS alica_engine 
)

include_directories(autogenerated/include ${catkin_INCLUDE_DIRS})

file(GLOB_RECURSE autogen_SOURCES "autogenerated/src/*.cpp")
add_library(${PROJECT_NAME} ${autogen_SOURCES};) 

target_link_libraries(${PROJECT_NAME} ${catkin_LIBRARIES})

